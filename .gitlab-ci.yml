stages:
  - build
  - image
  - deploy

variables:
  BR_REGISTRY_HOST: "ccr.ccs.tencentyun.com"
  BR_REGISTRY_IMAGE: "ccr.ccs.tencentyun.com/brtest/jayme-admin"
  BR_REGISTRY_DEMO_IMAGE: "ccr.ccs.tencentyun.com/brdemo/jayme-admin"

cache:
  key: ${CI_BUILD_REF_NAME}
  paths:
    - node_modules/

dev-build:
  stage: build
  only:
    - master
  script:
    - npm ci
    - npm run buildDev
    - Remove-Item C:\nginx-1.18.0\html\jayme-admin\dist -recurse
    - cp -r ./dist C:\nginx-1.18.0\html\jayme-admin
  artifacts:  
    expire_in: 1 week
    paths:
      - dist
  tags: 
    - boran-dev-202

test-build:
  stage: build
  script:
    - npm ci
    - npm run buildTest
  rules:
    - if: '$CI_COMMIT_REF_NAME == "test"'
  artifacts:  
    expire_in: 1 week
    paths:
      - dist
  tags: 
    - boran-dev-202

test-image:
  stage: image
  image: docker:git
  script:
    - docker login -u $BR_REGISTRY_USER -p $BR_REGISTRY_PASSWORD $BR_REGISTRY_HOST
    - docker build -t $BR_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $BR_REGISTRY_IMAGE:latest -f docker/Dockerfile .
    - docker push $BR_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $BR_REGISTRY_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_REF_NAME == "test"'
  tags: 
    - docker

prod-build:
  stage: build
  script:
    - npm ci
    - npm run build
  rules:
    - if: '$CI_COMMIT_TAG'
  artifacts:  
    expire_in: 1 week
    paths:
      - dist
  tags: 
    - boran-dev-202

prod-image:
  stage: image
  image: docker:git
  script:
    - docker login -u $BR_REGISTRY_USER -p $BR_REGISTRY_PASSWORD $BR_REGISTRY_HOST
    - docker build -t $BR_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $BR_REGISTRY_IMAGE:latest -f docker/Dockerfile .
    - docker push $BR_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $BR_REGISTRY_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_TAG'
  tags: 
    - docker